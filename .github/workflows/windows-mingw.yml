name: "Windows MinGW"
on:
  - push
  - pull_request
jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        label:
          - "MINGW64"
          - "MINGW32"
          - "UCRT64"
          - "CLANG64"
          - "CLANG32"
        include:
          - label: "MINGW64"
            msystem: MINGW64
            toolchain: mingw-w64-x86_64-toolchain
            can-fail: false
          - label: "MINGW32"
            msystem: MINGW32
            toolchain: mingw-w64-i686-toolchain
            can-fail: false
          - label: "UCRT64"
            msystem: UCRT64
            toolchain: mingw-w64-ucrt-x86_64-toolchain
            can-fail: false
          - label: "CLANG64"
            msystem: CLANG64
            toolchain: mingw-w64-clang-x86_64-toolchain
            can-fail: true
          - label: "CLANG32"
            msystem: CLANG32
            can-fail: true
    name: ${{ matrix.msystem }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            git
            msys2-devel
            base-devel
            binutils
            pactoys-git
            ${{ matrix.toolchain }}

      - name: Add staging repo
        shell: msys2 {0}
        run: |
          sed -i '1s|^|[staging]\nServer = https://repo.msys2.org/staging/\nSigLevel = Never\n[clang32]\nServer = https://repo.msys2.org/mingw/clang32/\n|' /etc/pacman.conf

      - name: Update using staging
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'

      - name: Install clang32 toolchain
        if: ${{ matrix.msystem == 'CLANG32' }}
        run: |
          msys2 -c 'pacman --noconfirm --overwrite "*" -S --needed mingw-w64-clang-i686-toolchain'

      - name: CI-Build
        shell: msys2 {0}
        continue-on-error: ${{ matrix.can-fail }}
        id: build
        run: |
          cd packages/windows
          MINGW_ARCH=${{ matrix.msystem }} makepkg-mingw --noconfirm --noprogressbar --nocheck --syncdeps --rmdeps --cleanbuild

      - name: "Upload binaries"
        uses: actions/upload-artifact@v2
        continue-on-error: ${{ matrix.can-fail }}
        with:
          name: ${{ matrix.msystem }}-packages
          path: ./*.pkg.tar.*
